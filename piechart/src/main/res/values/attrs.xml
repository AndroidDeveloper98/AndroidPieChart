<?xml version="1.0" encoding="utf-8"?>
<resources>
  <!-- Declares two custom attributes, showText and labelPosition, that belong to a styleable entity named PieChart -->
  <!-- The name of the styleable entity is, by convention, the same name as the name of the class that defines the custom view.
       Although it's not strictly necessary to follow this convention, many popular code editors depend on this naming convention
       to provide statement completion.-->
  <!-- Once you define the custom attributes, you can use them in layout XML files just like built-in attributes.
       The only difference is that your custom attributes belong to a different namespace.
       Instead of belonging to the http://schemas.android.com/apk/res/android namespace,
       they belong to http://schemas.android.com/apk/res/[your package name]-->
  <declare-styleable name="PieChart">
    <attr name="gap" format="dimension"/>
    <attr name="startAngle" format="integer"/>
    <attr name="holeRatio" format="float"/>
    <attr name="overlayRatio" format="float"/>
    <attr name="overlayAlpha" format="float"/>
    <attr name="overlayColor" format="enum">
      <enum name="black" value="0"/>
      <enum name="white" value="1"/>
      <enum name="darkenedSliceColor" value="2"/>
      <enum name="lightenedSliceColor" value="3"/>
      <enum name="customColors" value="4"/>
    </attr>
    <attr name="drawingDirection" format="enum">
      <enum name="clockwise" value="0"/>
      <enum name="counterClockwise" value="1"/>
    </attr>
    <attr name="sortSlices" format="enum">
      <enum name="none" value="0"/>
      <enum name="asc" value="1"/>
      <enum name="desc" value="2"/>
    </attr>
  </declare-styleable>
</resources>
